#!/usr/bin/env node

const {execSync} = require('child_process')
const fs = require('fs')

const MASTER_CHECK = `
  if [ $(git symbolic-ref --short -q HEAD) != 'master' ];
    then exit 1;
  fi
`

try {
  execSync(MASTER_CHECK)
} catch (error) {
  console.error('Must be on master to cut a release')
  process.exit(1)
}

const packageJson = JSON.parse(fs.readFileSync('package.json'))
const version = packageJson.version.split('.').map(versionPart => parseInt(versionPart, 10))

switch (process.argv.slice(2)[0]) {
  case 'major':
    version[0] += 1
    version[1] = 0
    version[2] = 0
    break
  case 'minor':
    version[1] += 1
    version[2] = 0
    break
  case 'patch':
    version[2] += 1
    break
  default:
    console.error('Not a valid version type')
    process.exit(1)
}

packageJson.version = version.join('.')
fs.writeFileSync('package.json', JSON.stringify(packageJson, null, 2) + '\n')

execSync(`g ci -m "Version bump to v${packageJson.version}"`)
execSync(`hub release create -d v${packageJson.version} -m v${packageJson.version}`)
